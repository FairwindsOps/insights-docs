(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{387:function(e,t,a){"use strict";a.r(t);var r=a(42),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"trivy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trivy"}},[e._v("#")]),e._v(" Trivy")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/aquasecurity/trivy",target:"_blank",rel:"noopener noreferrer"}},[e._v("Trivy"),a("OutboundLink")],1),e._v(" is an open source tool for scanning Docker images\nfor vulnerabilities. These scans run on your cluster, and the results are uploaded to Insights")]),e._v(" "),a("h2",{attrs:{id:"remediation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remediation"}},[e._v("#")]),e._v(" Remediation")]),e._v(" "),a("p",[e._v("If you're seeing Action Items from the Trivy report, there are two typical routes for resolution:")]),e._v(" "),a("ul",[a("li",[e._v("If the report is for a third-party library (e.g. a Helm chart), try updating to the latest version.\nIf that doesn't solve the problem, notify the maintainer that the latest version has a vulnerability,\ne.g. by opening a GitHub issue.")]),e._v(" "),a("li",[e._v("If the report is for an application you own, try updating the base image and any libraries you've\ninstalled on top of it.")])]),e._v(" "),a("h2",{attrs:{id:"private-images"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#private-images"}},[e._v("#")]),e._v(" Private Images")]),e._v(" "),a("p",[e._v("On some cloud providers, your nodes will be automatically configured to have access to your\ncontainer registry. For example, GKE nodes should be able to pull images from Google Container\nRegistry automatically.")]),e._v(" "),a("p",[e._v("But in many cases, you'll need to grant Trivy permission to access private images. To do so,\nyou'll need to create a Kubernetes Secret, and pass the name of that secret to the Helm\ninstallation of the Insights Agent")]),e._v(" "),a("p",[e._v("For example, to create a secret from your personal dockerconfig, you could run:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("kubectl create secret generic insights-pull --from-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("config.json"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/.docker/config.json -n insights-agent\n")])])]),a("p",[e._v("Note that we named the secret "),a("code",[e._v("insights-pull")]),e._v(", and put it in the "),a("code",[e._v("insights-agent")]),e._v(" namespace.\nWe can then install the agent with")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("  --set trivy.privateImages.dockerConfigSecret"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("insights-pull\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);