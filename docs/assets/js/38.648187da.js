(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{384:function(e,t,a){"use strict";a.r(t);var s=a(42),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"create-a-new-report"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-new-report"}},[e._v("#")]),e._v(" Create a new report")]),e._v(" "),a("p",[e._v("The plugin-based architecture of Fairwinds Insights makes it easy to add new data and create\nyour own Action Items. You just need to generate some JSON, pull out any Action Items, and\nsend a POST request to the Insights API.")]),e._v(" "),a("p",[e._v("If you develop a custom Insights report, you can either keep it private, or contribute it\nback to the community as open source. If your report is accepted as a core Insights report,\nit may get some extra functionality, like report events or a special UI.")]),e._v(" "),a("p",[e._v("Most of our existing reports are open source, so you can check out\n"),a("a",{attrs:{href:"https://github.com/FairwindsOps/insights-plugins",target:"_blank",rel:"noopener noreferrer"}},[e._v("the repository"),a("OutboundLink")],1),e._v("\nfor examples.")]),e._v(" "),a("p",[e._v("We're also happy to help with any questions or problems - reach out to "),a("a",{attrs:{href:"mailto:insights@fairwinds.com"}},[e._v("insights@fairwinds.com")]),e._v("\nand we'll work with you to add your custom data.")]),e._v(" "),a("h2",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("p",[e._v("Let's say we have an organization-wide policy to never use the "),a("code",[e._v("default")]),e._v(" namespace\nin our Kubernetes clusters. We want to create a new Insights report that will\nlook in "),a("code",[e._v("default")]),e._v(" and create an Action Item that prompts us to delete any resources that appear there.")]),e._v(" "),a("h3",{attrs:{id:"the-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-data"}},[e._v("#")]),e._v(" The Data")]),e._v(" "),a("p",[e._v("The first thing to do is to get the data in JSON format. For our example, that's pretty easy:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl get all -n default -o json > report.json\n")])])]),a("p",[e._v("The response looks something like this:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"apiVersion"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"v1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"items"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"apiVersion"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"v1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"kind"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Pod"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"metadata"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"nginx-deployment-5b69968587-55ljl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"namespace"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"default"')]),e._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"spec"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("though we've shortened it up for brevity.")]),e._v(" "),a("h3",{attrs:{id:"action-items"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#action-items"}},[e._v("#")]),e._v(" Action Items")]),e._v(" "),a("p",[e._v("Now that we've got our baseline report, we need to create some Action Items.")]),e._v(" "),a("p",[e._v("We'll use "),a("a",{attrs:{href:"https://stedolan.github.io/jq/",target:"_blank",rel:"noopener noreferrer"}},[e._v("jq"),a("OutboundLink")],1),e._v(" to parse through the report\nand create them. You can check out\n"),a("a",{attrs:{href:"https://shapeshed.com/jq-json/",target:"_blank",rel:"noopener noreferrer"}},[e._v("some examples of how to use jq"),a("OutboundLink")],1),e._v(",\nbut the basic idea is that we'll use it to transform one JSON object (our report)\ninto another JSON object (the Action Items).")]),e._v(" "),a("p",[e._v("As an example of how to use jq, say we wanted to transform the "),a("code",[e._v("items")]),e._v(" array above\ninto an array of the "),a("code",[e._v("kind")]),e._v("s of each item. We could write:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ cat report.json | jq \'[.items[].kind]\'\n[\n  "Pod",\n  "Pod",\n  "Pod",\n  "Service",\n  "Deployment",\n  "ReplicaSet"\n]\n')])])]),a("p",[e._v("So how do we use jq to create Action Items? For each Action Item, we'll need a few fields:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("EventType")]),e._v(" - an ID for the type of Action Item, e.g. "),a("code",[e._v("resource_in_default_namespace")])]),e._v(" "),a("li",[a("code",[e._v("Severity")]),e._v(" - A number in [0, 1] describing how important the Action Item is, with 1 being critical")]),e._v(" "),a("li",[a("code",[e._v("ResourceKind")]),e._v(" - the kind of the affected resource, e.g. "),a("code",[e._v("Deployment")]),e._v(" or "),a("code",[e._v("RoleBinding")])]),e._v(" "),a("li",[a("code",[e._v("ResourceNamespace")]),e._v(" - the namespace of the affected resource, e.g. "),a("code",[e._v("kube-system")])]),e._v(" "),a("li",[a("code",[e._v("ResourceName")]),e._v(" the name of the affected resource")]),e._v(" "),a("li",[a("code",[e._v("Title")]),e._v(" - a title for the action item")]),e._v(" "),a("li",[a("code",[e._v("Description")]),e._v(" - a description of the action item")]),e._v(" "),a("li",[a("code",[e._v("Remediation")]),e._v(" - some instructions on how to go about fixing the issue (markdown is OK here)")])]),e._v(" "),a("p",[e._v("Let's see how we can set those fields with jq:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ cat report.json | jq \'\n[.items[] |\n{\n  EventType: "resource_in_default_namespace",\n  Severity: .3,\n  ResourceKind:.kind,\n  ResourceNamespace: .metadata.namespace,\n  ResourceName: .metadata.name,\n  Title: "Resource found in the default namespace",\n  Description: "We disallow resources in the default namespace. Please delete this resource",\n  Remediation: ("`kubectl delete " + .kind + " " + .metadata.name + " -n default`"),\n}]\' > action-items.json\n')])])]),a("h3",{attrs:{id:"packaging-the-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#packaging-the-data"}},[e._v("#")]),e._v(" Packaging the data")]),e._v(" "),a("p",[e._v("Next, we'll need to package both the report and action items into a single JSON object.\nWe'll also include a "),a("code",[e._v("ReportVersion")]),e._v(" so we can keep track of any changes to the report's\noutput structure.")]),e._v(" "),a("p",[e._v("To do this, run:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("jq -s '{ReportVersion: \"0.0.1\", Report: .[0], ActionItems: .[1]}' \\\n    report.json action-items.json > request.json\n")])])]),a("h3",{attrs:{id:"sending-the-data-to-insights"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sending-the-data-to-insights"}},[e._v("#")]),e._v(" Sending the data to Insights")]),e._v(" "),a("p",[e._v("We'll use the "),a("code",[e._v("custom-reports")]),e._v(" API endpoint to send our report back to Fairwinds Insights.\nNote that you'll need to know your organization name, cluster name, and cluster auth token.")]),e._v(" "),a("p",[e._v("To get your cluster auth token, copy the "),a("code",[e._v("base64token")]),e._v(" from the Helm installation instructions\non your cluster's settings page, and run:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CLUSTER_TOKEN=$(echo $BASE_64_TOKEN | base64 -d)\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('curl -X POST \\\n  -H "Authorization: Bearer $CLUSTER_TOKEN" \\\n  -H "Content-Type: application/json" \\\n  "https://insights.fairwinds.com/v0/organizations/$ORG/clusters/$CLUSTER/custom-reports/default-check" \\\n  -d @request.json\n')])])]),a("p",[e._v("You should see action items appearing in the Insights UI!")]),e._v(" "),a("h3",{attrs:{id:"putting-it-all-together"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#putting-it-all-together"}},[e._v("#")]),e._v(" Putting it all together")]),e._v(" "),a("p",[e._v("To start running your report regularly, you'll want to package all of your commands into\na single bash script, e.g.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('#! /bin/bash\nkubectl get all -n default -o json > report.json\n\ncat report.json | jq \'\n[.items[] |\n{\n  EventType: "resource_in_default_namespace",\n  Severity: .3,\n  ResourceKind:.kind,\n  ResourceNamespace: .metadata.namespace,\n  ResourceName: .metadata.name,\n  Title: "Resource found in the default namespace",\n  Description: "We disallow resources in the default namespace. Please delete this resource",\n  Remediation: ("`kubectl delete " + .kind + " " + .metadata.name + " -n default`"),\n}]\' > action-items.json\n\njq -s \'{ReportVersion: "0.0.1", Report: .[0], ActionItems: .[1]}\' \\\n    report.json action-items.json > request.json\n\ncurl -X POST \\\n  -H "Authorization: Bearer $CLUSTER_TOKEN" \\\n  -H "Content-Type: application/json" \\\n  "https://insights.fairwinds.com/v0/organizations/$ORG/clusters/$CLUSTER/custom-reports/default-check" \\\n  -d @request.json\n')])])]),a("p",[e._v("You can this put this inside a Docker container, and wrap that Docker container\nwith a Kubernetes CronJob to run it on a regular basis. But be sure that the service\naccount it uses has the necessary RBAC permissions!")])])}),[],!1,null,null,null);t.default=n.exports}}]);